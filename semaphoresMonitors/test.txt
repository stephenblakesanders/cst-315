#include <vector>
#include <IceUtil/IceUtil.h>
// ...
 
Queue q;
 
class ReaderThread : public IceUtil::Thread
{
    virtual void run() 
    {
        for(int i = 0; i < 100; ++i)
        {
            cout << q.get() << endl;
        }
    }
};
 
class WriterThread : public IceUtil::Thread
{
    virtual void run() 
    {
        for(int i = 0; i < 100; ++i)
        {
            q.put(i);
        }
    }
};
 
int
main()
{
    vector<IceUtil::ThreadControl> threads;
    int i;
 
    // Create five reader threads and start them
    //
    for(i = 0; i < 5; ++i)
    {
        IceUtil::ThreadPtr t = new ReaderThread;
        threads.push_back(t->start());
    }
 
    // Create five writer threads and start them
    //
    for(i = 0; i < 5; ++i)
    {
        IceUtil::ThreadPtr t = new WriterThread;
        threads.push_back(t->start());
    }
 
    // Wait for all threads to finish
    //
    for(vector<IceUtil::ThreadControl>::iterator i = threads.begin(); i != threads.end(); ++i)
    {
        i->join();
    }
}
